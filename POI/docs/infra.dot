digraph INFRA {
  node [ color = "black", fillcolor = "#E6E6E6", height =1, style = "filled,bold,rounded", fontname = "Arial" ];
  "JoyToken" [ label = "JoyToken
(AWS::ERC20::Token)", shape =rectangle ];
  "Identity" [ label = "Identity
(AWS::Ethereum::Contract)", shape =rectangle ];
  "ZKVerifier" [ label = "ZKVerifier
(AWS::Ethereum::Contract)", shape =rectangle ];
  "ProofOfInference" [ label = "ProofOfInference
(AWS::Ethereum::Contract)", shape =rectangle, fillcolor = "#B7E0FF" ];
  "ModelMarketplace" [ label = "ModelMarketplace
(AWS::Ethereum::Contract)", shape =rectangle, fillcolor = "#E78F81" ];
  "NodeCoordinator" [ label = "NodeCoordinator
(AWS::Ethereum::Contract)", shape =rectangle, fillcolor = "#B7E0FF" ];
  "SovereignRPC" [ label = "SovereignRPC
(AWS::Ethereum::Contract)", shape =rectangle, fillcolor = "#E78F81" ];
  "InferenceNode" [ label = "InferenceNode
(Custom::PythonClass)", shape =rectangle, fillcolor = "#B7E0FF" ];
  "EdgeNode" [ label = "EdgeNode
(Custom::PythonClass)", shape =rectangle, fillcolor = "#B7E0FF" ];
  "ZKProver" [ label = "ZKProver
(Custom::PythonClass)", shape =rectangle ];
  "PermaNetDAORegistry" [ label = "PermaNetDAORegistry
(AWS::Ethereum::Contract)", shape =rectangle ];
  "PermaNetDomainRegistry" [ label = "PermaNetDomainRegistry
(AWS::Ethereum::Contract)", shape =rectangle ];
  "ProofOfInference" -> "ZKVerifier";
  "ProofOfInference" -> "JoyToken";
  "ModelMarketplace" -> "JoyToken";
  "ModelMarketplace" -> "ProofOfInference";
  "ModelMarketplace" -> "Identity";
  "NodeCoordinator" -> "JoyToken";
  "InferenceNode" -> "ProofOfInference";
  "EdgeNode" -> "NodeCoordinator";
  "EdgeNode" -> "InferenceNode";
  "PermaNetDAORegistry" -> "PermaNetDomainRegistry";
}
